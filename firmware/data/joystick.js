var StickStatus = { xPosition: 0, yPosition: 0, x: 0, y: 0, cardinalDirection: "C" }; var JoyStick = function (t, e, i) { var o = void 0 === (e = e || {}).title ? "joystick" : e.title, n = void 0 === e.width ? 0 : e.width, a = void 0 === e.height ? 0 : e.height, r = void 0 === e.internalFillColor ? "#FFFFFF" : e.internalFillColor, c = void 0 === e.internalLineWidth ? 2 : e.internalLineWidth, s = void 0 === e.internalStrokeColor ? "#F9F9F9" : e.internalStrokeColor, d = void 0 === e.externalLineWidth ? 2 : e.externalLineWidth, $ = void 0 === e.externalStrokeColor ? "#5b5a57" : e.externalStrokeColor, u = void 0 === e.autoReturnToCenter || e.autoReturnToCenter; i = i || function (t) { }; var h = document.getElementById(t); h.style.touchAction = "none"; var S = document.createElement("canvas"); S.id = o, 0 === n && (n = h.clientWidth), 0 === a && (a = h.clientHeight), S.width = n, S.height = a, h.appendChild(S); var l = S.getContext("2d"), f = 0, k = 2 * Math.PI, _ = (S.width - (S.width / 2 + 10)) / 2, g = _ + 5, x = _ + 30, v = S.width / 2, P = S.height / 2, C = S.width / 10, p = -1 * C, y = S.height / 10, w = -1 * y, L = v, F = P; function m() { l.beginPath(), l.arc(v, P, x, 0, k, !1), l.lineWidth = d, l.strokeStyle = $, l.stroke() } function E() { l.beginPath(), L < _ && (L = g), L + _ > S.width && (L = S.width - g), F < _ && (F = g), F + _ > S.height && (F = S.height - g), l.arc(L, F, _, 0, k, !1); var t = l.createRadialGradient(v, P, 5, v, P, 200); t.addColorStop(0, r), t.addColorStop(1, s), l.fillStyle = t, l.fill(), l.lineWidth = c, l.strokeStyle = s, l.stroke() } "ontouchstart" in document.documentElement ? (S.addEventListener("touchstart", function t(e) { f = 1, T = e.targetTouches[0].identifier }, !1), document.addEventListener("touchmove", function t(e) { 1 === f && e.targetTouches[0].target === S && (L = e.targetTouches[0].pageX, F = e.targetTouches[0].pageY, "BODY" === S.offsetParent.tagName.toUpperCase() ? (L -= S.offsetLeft, F -= S.offsetTop) : (L -= S.offsetParent.offsetLeft, F -= S.offsetParent.offsetTop), l.clearRect(0, 0, S.width, S.height), m(), E(), StickStatus.xPosition = L, StickStatus.yPosition = F, StickStatus.x = (100 * ((L - v) / g)).toFixed(), StickStatus.y = (-(100 * ((F - P) / g) * 1)).toFixed(), StickStatus.cardinalDirection = D(), i(StickStatus)) }, !1), document.addEventListener("touchend", function t(e) { e.changedTouches[0].identifier === T && (f = 0, u && (L = v, F = P), l.clearRect(0, 0, S.width, S.height), m(), E(), StickStatus.xPosition = L, StickStatus.yPosition = F, StickStatus.x = (100 * ((L - v) / g)).toFixed(), StickStatus.y = (-(100 * ((F - P) / g) * 1)).toFixed(), StickStatus.cardinalDirection = D(), i(StickStatus)) }, !1)) : (S.addEventListener("mousedown", W, !1), document.addEventListener("mousemove", function t(e) { 1 === f && (L = e.pageX, F = e.pageY, "BODY" === S.offsetParent.tagName.toUpperCase() ? (L -= S.offsetLeft, F -= S.offsetTop) : (L -= S.offsetParent.offsetLeft, F -= S.offsetParent.offsetTop), l.clearRect(0, 0, S.width, S.height), m(), E(), StickStatus.xPosition = L, StickStatus.yPosition = F, StickStatus.x = (100 * ((L - v) / g)).toFixed(), StickStatus.y = (-(100 * ((F - P) / g) * 1)).toFixed(), StickStatus.cardinalDirection = D(), i(StickStatus)) }, !1), document.addEventListener("mouseup", function t(e) { f = 0, u && (L = v, F = P), l.clearRect(0, 0, S.width, S.height), m(), E(), StickStatus.xPosition = L, StickStatus.yPosition = F, StickStatus.x = (100 * ((L - v) / g)).toFixed(), StickStatus.y = (-(100 * ((F - P) / g) * 1)).toFixed(), StickStatus.cardinalDirection = D(), i(StickStatus) }, !1)), m(), E(); let T = null; function W(t) { f = 1 } function D() { let t = "", e = L - v, i = F - P; return i >= w && i <= y && (t = "C"), i < w && (t = "N"), i > y && (t = "S"), e < p && ("C" === t ? t = "W" : t += "W"), e > C && ("C" === t ? t = "E" : t += "E"), t } this.GetWidth = function () { return S.width }, this.GetHeight = function () { return S.height }, this.GetPosX = function () { return L }, this.GetPosY = function () { return F }, this.GetX = function () { return (100 * ((L - v) / g)).toFixed() }, this.GetY = function () { return (-(100 * ((F - P) / g) * 1)).toFixed() }, this.GetDir = function () { return D() } };

#ifndef OLED_H
#define OLED_H

#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH   128        // OLED display width, in pixels
#define SCREEN_HEIGHT  64         // OLED display height, in pixels
#define OLED_RESET     -1         // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C       ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32

// 'BATTLEBUTBOT', 128x64px
const unsigned char bbb_logo [] PROGMEM = {
	0x00, 0x40, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0xc0, 0x38, 0x07, 0x83, 0xff, 0xdf, 0xfe, 0x1e, 0x03, 0xff, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0xc0, 0x18, 0x07, 0xe3, 0xff, 0xdf, 0xfe, 0x1e, 0x03, 0xff, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0xc0, 0x08, 0x07, 0xe3, 0xff, 0xdf, 0xfe, 0x1e, 0x03, 0xff, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0xcf, 0x88, 0x1f, 0xf0, 0x38, 0x01, 0xe0, 0x1e, 0x03, 0x80, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0xcf, 0xb8, 0x1f, 0xf0, 0x38, 0x01, 0xe0, 0x3e, 0x03, 0x80, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0xc7, 0xbc, 0x18, 0x70, 0x38, 0x01, 0xe0, 0x3e, 0x03, 0x80, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x04, 0xc0, 0x0e, 0x38, 0x70, 0x38, 0x01, 0xe0, 0x38, 0x03, 0xfe, 0x00,
	0x00, 0x80, 0x10, 0x00, 0x04, 0xc7, 0x86, 0x38, 0x70, 0x38, 0x01, 0xe0, 0x38, 0x03, 0x80, 0x00,
	0x00, 0x80, 0x11, 0x00, 0x04, 0xcf, 0x86, 0x38, 0x70, 0x38, 0x01, 0xe0, 0x38, 0x03, 0x80, 0x00,
	0x00, 0x80, 0x0e, 0x00, 0x04, 0xcf, 0x86, 0xff, 0xf0, 0x78, 0x03, 0xe0, 0xf8, 0x03, 0x80, 0x00,
	0x01, 0x00, 0x08, 0x00, 0x04, 0xc0, 0x0e, 0xf9, 0xf0, 0x78, 0x03, 0xe0, 0xff, 0xf3, 0xff, 0x00,
	0x02, 0x00, 0x10, 0x00, 0x04, 0xc0, 0x1e, 0xf8, 0xf0, 0x78, 0x03, 0xe0, 0xff, 0xf3, 0xff, 0x00,
	0x04, 0x00, 0x30, 0x00, 0x04, 0xc0, 0x3e, 0xf8, 0xf0, 0x78, 0x03, 0xe0, 0xff, 0xf3, 0xff, 0x00,
	0x08, 0x00, 0x40, 0x00, 0x04, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x00, 0x40, 0x00, 0x04, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x00, 0x80, 0x00, 0x04, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x20, 0x00, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x20, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x20, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x20, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x20, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x20, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x20, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x20, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x20, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x20, 0x01, 0x00, 0x00, 0x04, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0x00,
	0x20, 0x01, 0x00, 0x00, 0x04, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0x00,
	0x20, 0x01, 0x00, 0x00, 0x04, 0xc0, 0x38, 0xf0, 0x01, 0xff, 0xe4, 0x01, 0xc0, 0x7c, 0x3f, 0xfc,
	0x20, 0x01, 0x00, 0x00, 0x04, 0xc0, 0x18, 0xf0, 0x19, 0xff, 0xe4, 0x01, 0xc0, 0xfe, 0x3f, 0xfc,
	0x20, 0x00, 0x80, 0x00, 0x04, 0xc0, 0x08, 0xf0, 0x3d, 0xff, 0xe4, 0x00, 0xc0, 0xfe, 0x3f, 0xfc,
	0x10, 0x00, 0x40, 0x00, 0x04, 0xcf, 0x88, 0xf0, 0x3c, 0x0e, 0x04, 0x7c, 0xc3, 0x8f, 0x83, 0xc0,
	0x10, 0x00, 0x30, 0x00, 0x04, 0xcf, 0xb8, 0xf0, 0x3c, 0x0e, 0x04, 0x7d, 0xc7, 0x87, 0x83, 0xc0,
	0x10, 0x00, 0x18, 0x00, 0x04, 0xc7, 0xbc, 0xf0, 0x3c, 0x0e, 0x04, 0x79, 0xc7, 0x07, 0x83, 0xc0,
	0x08, 0x00, 0x08, 0x00, 0x04, 0xc0, 0x0e, 0xf0, 0x3c, 0x0e, 0x04, 0x00, 0xe7, 0x07, 0x83, 0xc0,
	0x06, 0x00, 0x1e, 0x00, 0x04, 0xc7, 0x86, 0xf0, 0x3c, 0x0e, 0x04, 0x78, 0x67, 0x07, 0x83, 0xc0,
	0x01, 0x00, 0x21, 0x00, 0x44, 0xcf, 0x86, 0xf0, 0x3c, 0x1e, 0x04, 0x7c, 0x67, 0x07, 0x83, 0xc0,
	0x00, 0xf1, 0xc1, 0xff, 0x84, 0xcf, 0x86, 0xf8, 0x7c, 0x3e, 0x04, 0x7c, 0x67, 0x8f, 0x87, 0xc0,
	0x00, 0x0e, 0x01, 0x00, 0x04, 0xc0, 0x0e, 0x3f, 0xf0, 0x3e, 0x04, 0x00, 0xe3, 0xfe, 0x07, 0xc0,
	0x00, 0x08, 0x01, 0x00, 0x04, 0xc0, 0x1e, 0x3f, 0xf0, 0x3e, 0x04, 0x01, 0xe3, 0xfe, 0x07, 0xc0,
	0x00, 0x08, 0x01, 0x00, 0x04, 0xc0, 0x3e, 0x1f, 0xe0, 0x3e, 0x04, 0x01, 0xe0, 0xfc, 0x07, 0xc0,
	0x00, 0x08, 0x01, 0x00, 0x04, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x01, 0x00, 0x04, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x07, 0xff, 0x80, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x01, 0x00, 0x04, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// ' cat icon', 16x16px
const unsigned char epd_bitmap__cat_icon [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x2a, 0x80, 0x2e, 0xfe, 0x40, 0x01, 0x80, 0x0e, 0x80, 0x08,
	0xa8, 0x08, 0x80, 0x08, 0xa8, 0x08, 0x90, 0x08, 0x40, 0x08, 0x3f, 0xf0, 0x14, 0x50, 0x14, 0x50
};
// ' ghost icon', 16x16px
const unsigned char epd_bitmap__ghost_icon [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x10, 0x04, 0x20, 0x02, 0x24, 0x02, 0x27, 0x02, 0xe6, 0x02,
	0x60, 0x02, 0x20, 0x02, 0x20, 0x02, 0x18, 0x0c, 0x0a, 0xa8, 0x0a, 0xa8, 0x05, 0x50, 0x00, 0x00
};
// ' schroom icon', 16x16px
const unsigned char epd_bitmap__schroom_icon [] PROGMEM = {
	0x03, 0xc0, 0x1e, 0x78, 0x3c, 0x3c, 0x5c, 0x3a, 0x9e, 0x79, 0x9f, 0xf9, 0xbe, 0x7d, 0x7c, 0x3e,
	0x3f, 0xfc, 0x08, 0x10, 0x3a, 0x5c, 0x28, 0x14, 0x28, 0x14, 0x29, 0x94, 0x08, 0x10, 0x07, 0xe0
};
// ' standcat icon', 16x16px
const unsigned char epd_bitmap__standcat_icon [] PROGMEM = {
	0x60, 0x06, 0x50, 0x0a, 0x4f, 0xf2, 0x40, 0x02, 0x8c, 0x61, 0x80, 0x01, 0x89, 0x21, 0x86, 0xc1,
	0x80, 0x01, 0x80, 0x01, 0x40, 0x02, 0x40, 0x02, 0x40, 0x02, 0x63, 0xc6, 0x84, 0x21, 0xf8, 0x1f
};

// ' border', 124x21px
const unsigned char epd_bitmap__border [] PROGMEM = {
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0,
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0
};
// ' selection bar', 3x7px
const unsigned char epd_bitmap__selection_bar [] PROGMEM = {
	0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0
};
// ' selection dots', 4x64px
const unsigned char epd_bitmap__selection_dots [] PROGMEM = {
	0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20,
	0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20,
	0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20,
	0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x00
};

void oled_begin(void);
void oled_loop(void* v);

#endif /* OLED_H */
